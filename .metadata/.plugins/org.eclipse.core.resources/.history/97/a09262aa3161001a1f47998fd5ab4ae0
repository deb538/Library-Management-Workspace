package com.libarayManagement.Librarian.Controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PatchMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.libarayManagement.Librarian.Exception.CustomRunTimeException;
import com.libarayManagement.Librarian.Model.ControllerOutput;
import com.libarayManagement.Librarian.Model.Librarian;
import com.libarayManagement.Librarian.Model.IModel.ILibrarian;
import com.libarayManagement.Librarian.Service.LibrarianService;

@RestController
@RequestMapping("/api/v1")
public class LibrarianController {
	
	@Autowired
	LibrarianService librarinService;
	
	@GetMapping("/librarian")
	public ResponseEntity<ControllerOutput> getAllLibrarians() {
		
		List<Librarian> allLibrarians = librarinService.getAllLibrarians();
		
		if(allLibrarians == null || allLibrarians.isEmpty()) {
			throw new CustomRunTimeException("No Resource found");
		}
		
		return new ResponseEntity<ControllerOutput>(allLibrarians, HttpStatus.OK);
	}
	
	@GetMapping("/librarian/{id}")
	public ResponseEntity<ILibrarian> getLibrarian(@PathVariable id) {
		

		if(notfound) {
			return new ResponseEntity<>(body, HttpStatus.NO_CONTENT);
		}
		
		return new ResponseEntity<>(body, HttpStatus.OK);
	}
	
	@PostMapping("/librarian")
	public ResponseEntity addLibrarian(@RequestBody ILibrarian librarian) {
		
		if(ResourceAlreadyExists) {
			return new ResponseEntity<>(body, HttpStatus.CONFLICT);
		}
		
		return new ResponseEntity<>(HttpStatus.CREATED);
	}
	
	@PutMapping("/librarian/{id}")
	public ResponseEntity addLibrarian(@PathVariable id) {
		
		if(no such record) {
			return new ResponseEntity<>(body, HttpStatus.NO_CONTENT);
		}
		
		return new ResponseEntity<>(HttpStatus.OK);
	}
	
	@PatchMapping("/librarian/{id}")
	public ResponseEntity addLibrarian(@PathVariable id) {
		
		if(no such record) {
			return new ResponseEntity<>(body, HttpStatus.NO_CONTENT);
		}
		
		return new ResponseEntity<>(HttpStatus.OK);
	}
	
	@DeleteMapping("/librarian/{id}")
	public ResponseEntity addLibrarian(@PathVariable id) {
		
		if(no such record) {
			return new ResponseEntity<>(body, HttpStatus.NO_CONTENT);
		}
		
		return new ResponseEntity<>(HttpStatus.OK);
	}

}
